/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("const container = document.querySelector('.js-container');\nconst header = document.createElement('h1');\nheader.innerHTML = 'TUBIFY';\ncontainer.append(header);\nlet body = {\n  message: 'hello world'\n};\n\n// fetch( 'http://localhost:5001', { \n//     method: 'POST',\n//     body: JSON.stringify(body),\n//     headers: {\n//         \"Content-Type\": \"application/json\"\n//     }\n// }).then(res => {\n//     return res.json();\n// }).then(data => {\n//     console.log(data);\n// })\n\nconst chatLog = document.getElementById('chat-log');\nconst message = document.getElementById('message');\nconst form = document.querySelector('form');\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const messageText = message.value;\n  message.value = '';\n  const messageElement = document.createElement('div');\n  messageElement.classList.add('message');\n  messageElement.classList.add('message--sent');\n  messageElement.innerHTML = `\n        <div class=message__text\">${messageText}</div>\n    `;\n  chatLog.appendChild(messageElement);\n  chatLog.scrollTop = chatLog.scrollHeight;\n  fetch('http://localhost:5001', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      message: messageText\n    })\n  }).then(res => {\n    if (!res.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return res.json();\n  }).then(data => {\n    // console.log(data);\n    // console.log(data.choices[0].message.content);\n    const messageElement = document.createElement('div');\n    messageElement.classList.add('message');\n    messageElement.classList.add('message--received');\n    messageElement.innerHTML = `\n            <div class=\"message__text\">${data.choices[0].message.content}</div>\n        `;\n    chatLog.appendChild(messageElement);\n    chatLog.scrollTop = chatLog.scrollHeight;\n  }).catch(error => {\n    console.error('There has been a problem with your fetch operation:', error);\n  });\n});\n\n//API PROJECT\n\n// import { Configuration, OpenAIApi } from \"openai\";\n// import express from \"express\";\n// import bodyParser from \"body-parser\";\n// import cors from \"cors\";\n\n// const configuration = new Configuration({\n//     organization: \"org-gRwB2IDSV07ElX4x7MoS8mf7\",\n//     apiKey: \"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\",\n// })\n\n// const openAi  = new OpenAIApi(configuration)\n\n// const app = express();\n// const port = 3000;\n\n// app.use(bodyParser.json());\n// app.use(cors());\n\n// app.post(\"/\", async (req, res) => {\n\n//     const { message } = req.body;\n\n//     const completion = await openAi.createChatCompletion({\n//         model: \"gpt-3.5-turbo\",\n//         messages: [\n//             {role: \"user\", content: `${message}`},\n//         ] \n//     })\n\n//     res.json({\n//         completion: completion.data.choices[0].message\n//     })\n\n// });\n\n// app.listen(port, () => {\n//     console.log(`Example app listening at http://localhost${port}`);\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJuYW1lcyI6WyJjb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJoZWFkZXIiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiYXBwZW5kIiwiYm9keSIsIm1lc3NhZ2UiLCJjaGF0TG9nIiwiZ2V0RWxlbWVudEJ5SWQiLCJmb3JtIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIm1lc3NhZ2VUZXh0IiwidmFsdWUiLCJtZXNzYWdlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZENoaWxkIiwic2Nyb2xsVG9wIiwic2Nyb2xsSGVpZ2h0IiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiSlNPTiIsInN0cmluZ2lmeSIsInRoZW4iLCJyZXMiLCJvayIsIkVycm9yIiwianNvbiIsImRhdGEiLCJjaG9pY2VzIiwiY29udGVudCIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXh0aWZ5Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWNvbnRhaW5lcicpO1xuY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbmhlYWRlci5pbm5lckhUTUwgPSAnVFVCSUZZJztcbmNvbnRhaW5lci5hcHBlbmQoaGVhZGVyKTtcblxubGV0IGJvZHkgPSB7bWVzc2FnZTogJ2hlbGxvIHdvcmxkJ307XG5cbi8vIGZldGNoKCAnaHR0cDovL2xvY2FsaG9zdDo1MDAxJywgeyBcbi8vICAgICBtZXRob2Q6ICdQT1NUJyxcbi8vICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSxcbi8vICAgICBoZWFkZXJzOiB7XG4vLyAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4vLyAgICAgfVxuLy8gfSkudGhlbihyZXMgPT4ge1xuLy8gICAgIHJldHVybiByZXMuanNvbigpO1xuLy8gfSkudGhlbihkYXRhID0+IHtcbi8vICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbi8vIH0pXG5cblxuXG5cblxuXG5cbmNvbnN0IGNoYXRMb2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhdC1sb2cnKTtcbmNvbnN0IG1lc3NhZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVzc2FnZScpO1xuY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKTtcbmZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgbWVzc2FnZVRleHQgPSBtZXNzYWdlLnZhbHVlO1xuICAgIG1lc3NhZ2UudmFsdWUgPSAnJztcbiAgICBjb25zdCBtZXNzYWdlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIG1lc3NhZ2VFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ21lc3NhZ2UnKTtcbiAgICBtZXNzYWdlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdtZXNzYWdlLS1zZW50Jyk7XG4gICAgbWVzc2FnZUVsZW1lbnQuaW5uZXJIVE1MID0gYFxuICAgICAgICA8ZGl2IGNsYXNzPW1lc3NhZ2VfX3RleHRcIj4ke21lc3NhZ2VUZXh0fTwvZGl2PlxuICAgIGA7XG4gICAgY2hhdExvZy5hcHBlbmRDaGlsZChtZXNzYWdlRWxlbWVudCk7XG4gICAgY2hhdExvZy5zY3JvbGxUb3AgPSBjaGF0TG9nLnNjcm9sbEhlaWdodDtcbiAgICBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDo1MDAxJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlVGV4dFxuICAgICAgICB9KVxuICAgIH0pXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOZXR3b3JrIHJlc3BvbnNlIHdhcyBub3Qgb2snKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9KVxuICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YS5jaG9pY2VzWzBdLm1lc3NhZ2UuY29udGVudCk7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2VFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIG1lc3NhZ2VFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ21lc3NhZ2UnKTtcbiAgICAgICAgbWVzc2FnZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnbWVzc2FnZS0tcmVjZWl2ZWQnKTtcbiAgICAgICAgbWVzc2FnZUVsZW1lbnQuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2VfX3RleHRcIj4ke2RhdGEuY2hvaWNlc1swXS5tZXNzYWdlLmNvbnRlbnR9PC9kaXY+XG4gICAgICAgIGA7XG4gICAgICAgIGNoYXRMb2cuYXBwZW5kQ2hpbGQobWVzc2FnZUVsZW1lbnQpO1xuICAgICAgICBjaGF0TG9nLnNjcm9sbFRvcCA9IGNoYXRMb2cuc2Nyb2xsSGVpZ2h0O1xuICAgIH0pXG4gICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcignVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggeW91ciBmZXRjaCBvcGVyYXRpb246JywgZXJyb3IpO1xuICAgIH0pO1xufSk7XG5cblxuXG4vL0FQSSBQUk9KRUNUXG5cblxuLy8gaW1wb3J0IHsgQ29uZmlndXJhdGlvbiwgT3BlbkFJQXBpIH0gZnJvbSBcIm9wZW5haVwiO1xuLy8gaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbi8vIGltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xuLy8gaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIjtcblxuLy8gY29uc3QgY29uZmlndXJhdGlvbiA9IG5ldyBDb25maWd1cmF0aW9uKHtcbi8vICAgICBvcmdhbml6YXRpb246IFwib3JnLWdSd0IySURTVjA3RWxYNHg3TW9TOG1mN1wiLFxuLy8gICAgIGFwaUtleTogXCJzay1ST2gxa0R6UDR2UXZsc0hzM1BJN1QzQmxia0ZKa3VnMGtFTlZtWWRTNUg5MXJoSHlcIixcbi8vIH0pXG5cbi8vIGNvbnN0IG9wZW5BaSAgPSBuZXcgT3BlbkFJQXBpKGNvbmZpZ3VyYXRpb24pXG5cbi8vIGNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbi8vIGNvbnN0IHBvcnQgPSAzMDAwO1xuXG4vLyBhcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbi8vIGFwcC51c2UoY29ycygpKTtcblxuLy8gYXBwLnBvc3QoXCIvXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuXG4vLyAgICAgY29uc3QgeyBtZXNzYWdlIH0gPSByZXEuYm9keTtcbiAgICAgXG4vLyAgICAgY29uc3QgY29tcGxldGlvbiA9IGF3YWl0IG9wZW5BaS5jcmVhdGVDaGF0Q29tcGxldGlvbih7XG4vLyAgICAgICAgIG1vZGVsOiBcImdwdC0zLjUtdHVyYm9cIixcbi8vICAgICAgICAgbWVzc2FnZXM6IFtcbi8vICAgICAgICAgICAgIHtyb2xlOiBcInVzZXJcIiwgY29udGVudDogYCR7bWVzc2FnZX1gfSxcbi8vICAgICAgICAgXSBcbi8vICAgICB9KVxuXG4vLyAgICAgcmVzLmpzb24oe1xuLy8gICAgICAgICBjb21wbGV0aW9uOiBjb21wbGV0aW9uLmRhdGEuY2hvaWNlc1swXS5tZXNzYWdlXG4vLyAgICAgfSlcblxuLy8gfSk7XG5cbi8vIGFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuLy8gICAgIGNvbnNvbGUubG9nKGBFeGFtcGxlIGFwcCBsaXN0ZW5pbmcgYXQgaHR0cDovL2xvY2FsaG9zdCR7cG9ydH1gKTtcbi8vIH0pO1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVMsR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsZUFBZSxDQUFDO0FBQ3pELE1BQU1DLE1BQU0sR0FBR0YsUUFBUSxDQUFDRyxhQUFhLENBQUMsSUFBSSxDQUFDO0FBQzNDRCxNQUFNLENBQUNFLFNBQVMsR0FBRyxRQUFRO0FBQzNCTCxTQUFTLENBQUNNLE1BQU0sQ0FBQ0gsTUFBTSxDQUFDO0FBRXhCLElBQUlJLElBQUksR0FBRztFQUFDQyxPQUFPLEVBQUU7QUFBYSxDQUFDOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVFBLE1BQU1DLE9BQU8sR0FBR1IsUUFBUSxDQUFDUyxjQUFjLENBQUMsVUFBVSxDQUFDO0FBQ25ELE1BQU1GLE9BQU8sR0FBR1AsUUFBUSxDQUFDUyxjQUFjLENBQUMsU0FBUyxDQUFDO0FBQ2xELE1BQU1DLElBQUksR0FBR1YsUUFBUSxDQUFDQyxhQUFhLENBQUMsTUFBTSxDQUFDO0FBQzNDUyxJQUFJLENBQUNDLGdCQUFnQixDQUFDLFFBQVEsRUFBR0MsQ0FBQyxJQUFLO0VBQ25DQSxDQUFDLENBQUNDLGNBQWMsQ0FBQyxDQUFDO0VBQ2xCLE1BQU1DLFdBQVcsR0FBR1AsT0FBTyxDQUFDUSxLQUFLO0VBQ2pDUixPQUFPLENBQUNRLEtBQUssR0FBRyxFQUFFO0VBQ2xCLE1BQU1DLGNBQWMsR0FBR2hCLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLEtBQUssQ0FBQztFQUNwRGEsY0FBYyxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQyxTQUFTLENBQUM7RUFDdkNGLGNBQWMsQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUMsZUFBZSxDQUFDO0VBQzdDRixjQUFjLENBQUNaLFNBQVMsR0FBSTtBQUNoQyxvQ0FBb0NVLFdBQVk7QUFDaEQsS0FBSztFQUNETixPQUFPLENBQUNXLFdBQVcsQ0FBQ0gsY0FBYyxDQUFDO0VBQ25DUixPQUFPLENBQUNZLFNBQVMsR0FBR1osT0FBTyxDQUFDYSxZQUFZO0VBQ3hDQyxLQUFLLENBQUMsdUJBQXVCLEVBQUU7SUFDM0JDLE1BQU0sRUFBRSxNQUFNO0lBQ2RDLE9BQU8sRUFBRTtNQUNMLGNBQWMsRUFBRTtJQUNwQixDQUFDO0lBQ0RsQixJQUFJLEVBQUVtQixJQUFJLENBQUNDLFNBQVMsQ0FBQztNQUNqQm5CLE9BQU8sRUFBRU87SUFDYixDQUFDO0VBQ0wsQ0FBQyxDQUFDLENBQ0RhLElBQUksQ0FBQ0MsR0FBRyxJQUFJO0lBQ1QsSUFBSSxDQUFDQSxHQUFHLENBQUNDLEVBQUUsRUFBRTtNQUNiLE1BQU0sSUFBSUMsS0FBSyxDQUFDLDZCQUE2QixDQUFDO0lBQzlDO0lBQ0EsT0FBT0YsR0FBRyxDQUFDRyxJQUFJLENBQUMsQ0FBQztFQUNyQixDQUFDLENBQUMsQ0FDREosSUFBSSxDQUFDSyxJQUFJLElBQUk7SUFDVjtJQUNBO0lBQ0EsTUFBTWhCLGNBQWMsR0FBR2hCLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLEtBQUssQ0FBQztJQUNwRGEsY0FBYyxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQyxTQUFTLENBQUM7SUFDdkNGLGNBQWMsQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLENBQUM7SUFDakRGLGNBQWMsQ0FBQ1osU0FBUyxHQUFJO0FBQ3BDLHlDQUF5QzRCLElBQUksQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDMUIsT0FBTyxDQUFDMkIsT0FBUTtBQUN6RSxTQUFTO0lBQ0QxQixPQUFPLENBQUNXLFdBQVcsQ0FBQ0gsY0FBYyxDQUFDO0lBQ25DUixPQUFPLENBQUNZLFNBQVMsR0FBR1osT0FBTyxDQUFDYSxZQUFZO0VBQzVDLENBQUMsQ0FBQyxDQUNEYyxLQUFLLENBQUNDLEtBQUssSUFBSTtJQUNaQyxPQUFPLENBQUNELEtBQUssQ0FBQyxxREFBcUQsRUFBRUEsS0FBSyxDQUFDO0VBQy9FLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQzs7QUFJRjs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXh0aWZ5Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;